<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
             xmlns:file="http://www.springframework.org/schema/integration/file"
             xsi:schemaLocation="
             http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/integration
             http://www.springframework.org/schema/integration/spring-integration.xsd
             http://www.springframework.org/schema/integration/xml
             http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
             http://www.springframework.org/schema/integration/file
             http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">
  <!-- ************ Используемые бины ************ -->
  <beans:bean class="mis.integration.ariadna.config.IntegrationConfig"/>
  <beans:import resource="common-integration.xml"/>

  <!-- Преобразование "Заявки на ЛИ", поступившей из МИС -->

  <!-- Тестовый блок -->
  <channel id="prescriptionFileInputChannel"/>
  <file:file-to-string-transformer input-channel="prescriptionFileInputChannel" output-channel="misPrescriptionStringChannel"
                                   delete-files="false"/>

  <publish-subscribe-channel id="misPrescriptionStringChannel" datatype="java.lang.String">
    <interceptors>
      <wire-tap channel="loggerChannel"/>
    </interceptors>
  </publish-subscribe-channel>

  <chain id="mainRequestChain" input-channel="misPrescriptionStringChannel" output-channel="observationStringChannel">
    <header-enricher>
      <header name="output-file-code" method="computeValue">
        <beans:bean class="mis.integration.ariadna.FileCodeGenerator"/>
      </header>
      <!--Запоминаем исходную xml-строку (здесь PrescriptionDTO) -->
      <header name="source_string" expression="payload"/>
    </header-enricher>
    <int-xml:unmarshalling-transformer unmarshaller="misPrescriptionMarshaller"/>
    <transformer ref="prescriptionTransformer" method="transformToRequestRoot"/>
    <int-xml:marshalling-transformer marshaller="ariadnaJaxb2Marshaller" result-type="StringResult"/>
    <transformer expression="payload.toString()"/>
  </chain>

  <publish-subscribe-channel id="observationStringChannel" datatype="java.lang.String">
    <interceptors>
      <wire-tap channel="loggerChannel"/>
    </interceptors>
  </publish-subscribe-channel>

  <transformer input-channel="observationStringChannel" output-channel="observationMd5Channel"
               ref="md5Transformer" method="transform"/>

  <channel id="observationMd5Channel" datatype="java.lang.String">
    <interceptors>
      <wire-tap channel="loggerChannel"/>
    </interceptors>
  </channel>

  <!-- Тестовая конфигурация, избегаем ошибки незакрытого канала -->
  <bridge input-channel="observationMd5Channel" output-channel="nullChannel"/>

</beans:beans>